The BaseGeometry Module:
=======================

Using ``BaseGeometry``
-------------------

First Import ``BaseGeometry`` function from ``7-base_geometry`` module:

    >>> BaseGeometry = __import__("7-base_geometry").BaseGeometry

Documentation Test:

    >>> len(__import__("7-base_geometry").__doc__) > 0
    True

    >>> len(__import__("7-base_geometry").BaseGeometry.__doc__) > 0
    True

Usage for correct outputs:
    >>> b = BaseGeometry()
    >>> b.area()
    Traceback (most recent call last):
    Exception: area() is not implemented

    >>> b.integer_validator("int", 5)
    >>> b.integer_validator("float", 500)
    >>> b.integer_validator("any_string", 1)

Instance and functions_exists Test:
    >>> dir(b) == dir(BaseGeometry)
    True


Error outputs:

    >>> b.integer_validator(1, 2, 3)
    Traceback (most recent call last):
    TypeError: integer_validator() takes 3 positional arguments but 4 were given

    >>> b.integer_validator(1)
    Traceback (most recent call last):
    TypeError: integer_validator() missing 1 required positional argument: 'value'

    >>> b.integer_validator()
    Traceback (most recent call last):
    TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

    >>> b.integer_validator("int", "int")
    Traceback (most recent call last):
    TypeError: int must be an integer

    >>> b.integer_validator("int", None)
    Traceback (most recent call last):
    TypeError: int must be an integer

    >>> b.integer_validator("int", BaseGeometry)
    Traceback (most recent call last):
    TypeError: int must be an integer

    >>> b.integer_validator("int", True)
    Traceback (most recent call last):
    TypeError: int must be an integer

    >>> b.integer_validator("int", 5.5)
    Traceback (most recent call last):
    TypeError: int must be an integer

    >>> b.integer_validator("int", -5.5)
    Traceback (most recent call last):
    TypeError: int must be an integer

    >>> b.integer_validator("int", 0)
    Traceback (most recent call last):
    ValueError: int must be greater than 0

    >>> b.integer_validator("int", -2)
    Traceback (most recent call last):
    ValueError: int must be greater than 0

    >>> b.integer_validator("int", {5})
    Traceback (most recent call last):
    TypeError: int must be an integer

    >>> b.integer_validator("int", ["5", 5])
    Traceback (most recent call last):
    TypeError: int must be an integer

    >>> b.integer_validator("int", [5, 5])
    Traceback (most recent call last):
    TypeError: int must be an integer

    >>> b.integer_validator("int", b)
    Traceback (most recent call last):
    TypeError: int must be an integer

    >>> b.integer_validator("int", set())
    Traceback (most recent call last):
    TypeError: int must be an integer
